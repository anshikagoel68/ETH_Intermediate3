// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol";

contract Token is ERC20{
    address public owner; 
    constructor()ERC20("ERC2O Token","OCET"){
        owner=msg.sender; 
    }
    function mintInitialSupply(uint256 initialSupply)public{
        require(msg.sender== owner,"Only owner can mint initial supply");
        require(totalSupply()==0,"Initial supply has already been minted");
        _mint(owner,initialSupply); 
    }
    function mint(address account,uint256 amount)public{
        require(msg.sender==owner,"Only owner can mint");
        _mint(account,amount); 
    }
    function burn(address account,uint256 amount)public{
        require(msg.sender == owner,"Only owner can burn");
        _burn(account,amount); 
    }
}


